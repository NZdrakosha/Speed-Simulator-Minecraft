plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}


group = 'me.drakosha'
version = '0'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT"
    implementation 'io.vertx:vertx-mongo-client:4.5.1'
    implementation 'org.mongodb:mongodb-driver-reactivestreams:4.11.1'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

jar {
    from {
        configurations.runtimeClasspath.collect { it.directory ? it : zipTree(it) }
    }
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}
def serverPluginsDir = "C:/server/plugins"

tasks.register('copyToServer', Copy) {
    dependsOn jar
    from jar.archiveFile.get().asFile
    into serverPluginsDir
    doLast {
        println "Плагин скопирован в папку серверных плагинов: $serverPluginsDir"
    }
}
processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
tasks.build {
    finalizedBy 'copyToServer'
}